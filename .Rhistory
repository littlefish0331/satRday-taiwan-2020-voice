s7@left %>% head
s7@right %>% head
s7@stereo
s7@samp.rate
s7@bit
s7@pcm
s7@left %>% range()
s10 <- load.wave(where = "../data/wmv/1kHz_44100Hz_16bit_05sec.wav")
s10 %>% head
s10$rate
s10$bits
tmp <- rep(NA_real_, 16000*5)
t1 <- record(where = tmp, rate = 16000, channels = 1)
pause(x = t1)
tmp %>% head
tmp <- rep(NA_real_, 16000*5)
t1 <- record(where = tmp, rate = 16000, channels = 1)
pause(x = t1)
play(tmp)
play(tmp)
tmp <- rep(NA, 16000*5)
t1 <- record(where = tmp, rate = 16000, channels = 1)
pause(x = t1)
play(tmp)
a <- play(sin(1:100000/20))
a
# Audio player instance 63b770 of AudioUnits (Mac OS X) driver (macosx).
wait(a) # wait for the playback to finish
rewind(a)
resume(a) # play again
a
a <- play(sin(1:100000/20))
resume(a) # play again
rewind(a)
resume(a) # play again
tmp <- rep(NA, 16000*5)
t1 <- record(where = tmp, rate = 16000, channels = 1)
pause(x = t1)
rewind(tmp)
play(tmp)
tmp %>% head
data(tico)
play(tico)
tico %>% str
export(wave = tico, f = 22050, header = F)
export(wave = tico, f = 22050, header = T, filename = "123.txt")
# 自定義 header
export(wave = tico, f = 22050, header = "f=22050; ch=left", filename = "tico4Goldwave.txt")
tico
ticofirst <- cutw(wave = tico, f = 22050, to = 0.5, output = "Wave")
ticofirst
savewav(ticofirst, filename = "tico_firstnote.wav")
wav2flac("./tico_firstnote.wav", overwrite = T)
rm(list = ls()); gc()
library(knitr)
library(kableExtra)
library(dplyr)
library(tuneR)
library(seewave)
library(audio)
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
s1 <- sin(2*pi*440*seq(0,1,length.out = 8000))
is.vector(s1)
mode(s1)
oscillo(wave = s1, f = 8000)
s2 <- as.matrix(s1)
is.matrix(s2)
dim(s2)
oscillo(wave = s2, f = 8000)
x <- rnorm(8000)
s3 <- cbind(s2, x)
s3 %>% head
is.matrix(s3)
dim(s3)
oscillo(wave = s3, f = 8000)
s4 <- ts(data = s1, start = 0, frequency = 8000)
str(s4)
s4 <- ts(data = rnorm(4000), start = 0, end = 0.5, frequency = 8000)
str(s4)
head(s4, 1); tail(s4, 1)
frequency(s4)
deltat(s4) #1/frequency(s4)
oscillo(wave = s4)
s5 <- ts(data = s3, f = 8000)
class(s5)
oscillo(s5)
s6 <- readWave(filename = "../data/wmv/1kHz_44100Hz_16bit_05sec.wav")
s7 <- readWave(filename = "../data/wmv/1kHz_44100Hz_16bit_05sec.wav", from = 0, to = 2, units = "seconds")
s7
mp3 <- readMP3(filename = "../data/mp3/1kHz_44100Hz_16bit_05sec.mp3")
mp3
s7@left %>% head
s7@right %>% head
s7@stereo
s7@samp.rate
s7@bit
s7@pcm
s7@left %>% range()
s10 <- load.wave(where = "../data/wmv/1kHz_44100Hz_16bit_05sec.wav")
s10 %>% head
s10$rate
s10$bits
a <- play(sin(1:100000/20))
a
# Audio player instance 63b770 of AudioUnits (Mac OS X) driver (macosx).
# Audio player instance 5ff92a90 of Windows MultiMedia audio driver (wmm).
wait(a) # wait for the playback to finish
rewind(a)
resume(a) # play again
data(tico)
export(wave = tico, f = 22050, header = F)
export(wave = tico, f = 22050, header = T)
export(wave = tico, f = 22050, header = T, filename = "tico4Goldwave.txt")
# 自定義 header
export(wave = tico, f = 22050, header = "f=22050; ch=left", filename = "tico4Goldwave.txt")
play(tico)
rm(list = ls()); gc()
library(knitr)
library(kableExtra)
library(dplyr)
library(tuneR)
library(seewave)
library(audio)
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
s1 <- sin(2*pi*440*seq(0,1,length.out = 8000))
is.vector(s1)
mode(s1)
oscillo(wave = s1, f = 8000)
s2 <- as.matrix(s1)
is.matrix(s2)
dim(s2)
oscillo(wave = s2, f = 8000)
x <- rnorm(8000)
s3 <- cbind(s2, x)
s3 %>% head
is.matrix(s3)
dim(s3)
oscillo(wave = s3, f = 8000)
s4 <- ts(data = s1, start = 0, frequency = 8000)
str(s4)
s4 <- ts(data = rnorm(4000), start = 0, end = 0.5, frequency = 8000)
str(s4)
head(s4, 1); tail(s4, 1)
frequency(s4)
deltat(s4) #1/frequency(s4)
oscillo(wave = s4)
s5 <- ts(data = s3, f = 8000)
class(s5)
oscillo(s5)
s6 <- readWave(filename = "../data/wmv/1kHz_44100Hz_16bit_05sec.wav")
s7 <- readWave(filename = "../data/wmv/1kHz_44100Hz_16bit_05sec.wav", from = 0, to = 2, units = "seconds")
s7
mp3 <- readMP3(filename = "../data/mp3/1kHz_44100Hz_16bit_05sec.mp3")
mp3
s7@left %>% head
s7@right %>% head
s7@stereo
s7@samp.rate
s7@bit
s7@pcm
s7@left %>% range()
s10 <- load.wave(where = "../data/wmv/1kHz_44100Hz_16bit_05sec.wav")
s10 %>% head
s10$rate
s10$bits
data(tico)
export(wave = tico, f = 22050, header = F)
export(wave = tico, f = 22050, header = T)
export(wave = tico, f = 22050, header = T, filename = "tico4Goldwave.txt")
# 自定義 header
export(wave = tico, f = 22050, header = "f=22050; ch=left", filename = "tico4Goldwave.txt")
savewav(tico, f = 22050)
ticofirst <- cutw(wave = tico, f = 22050, to = 0.5, output = "Wave")
savewav(ticofirst, filename = "tico_firstnote.wav")
sin(440)
s12 <- stereo(left = left, right = right)
```{r}
left <- sin(440)
right <- sin(2000)
s12 <- stereo(left = left, right = right)
left <- sin(440)
right <- sin(2000)
left %>% str
right %>% str
s12 <- stereo(left = left, right = right)
left <- sin(440)
right <- sin(2000)
s12 <- stereo(left = left, right = right)
?equalWave
Wobj <- sine(440)
Wobj
Wobj2 <- stereo(Wobj, Wobj)
Wobj2
mono(Wobj2, "right")
Wobj <- sine(440)
Wobj
Wobj2 <- stereo(Wobj, Wobj)
Wobj2
mono(Wobj2, "right")
Wobj <- sine(2000)
Wobj <- sine(440)
tmp <- sine(2000)
Wobj2 <- stereo(Wobj, tmp)
Wobj2
Wobj <- sine(400)
tmp <- sine(2000)
Wobj2 <- stereo(Wobj, tmp)
Wobj2 <- stereo(left = Wobj, right = tmp)
Wobj <- sine(440)
tmp <- sine(2000)
s12 <- stereo(left = LF, right = RI)
LF <- sin(440)
RI <- sin(2000)
s12 <- stereo(left = LF, right = RI)
s12 <- stereo(LF, RI)
LF <- sin(440)
RI <- sin(2000)
Wobj2 <- stereo(Wobj, tmp)
Wobj2 <- stereo(Wobj, LF)
LF <- sine(440)
LF
RI <- sine(2000)
RI
play(LF)
LF <- sine(440)
RI <- sine(2000)
s12 <- stereo(LF, RI)
s13 <- mono(s12, "right")
s14 <- channel(s12, "left")
s13
s14
s13@left %>% is.vector()
s14@left %>% is.vector()
s13@right %>% is.vector()
s13@right %>% head
s13 <- mono(s12, "right")
s13@right %>% head
s13@left %>% head
s14 <- channel(s12, "left")
s14@left %>% is.vector()
s14@left
s13 <- mono(s12, "right")
LF <- sine(440)
RI <- sine(2000)
s12 <- stereo(LF, RI)
s12
s13 <- mono(s12, "right")
s13@right %>% head
s13@left %>% head
s13 <- mono(s12, "left")
s13@right %>% head
s13@left %>% head
s14 <- channel(s12, "right")
s14@left %>% head
play(s6)
setWavPlayer("C:\Program Files\DAUM\PotPlayer\PotPlayerMini64.exe")
setWavPlayer("C:/Program Files/DAUM/PotPlayer/PotPlayerMini64.exe")
play(s6)
play(s1)
play(s2)
play(s3)
play(s4)
play(s5)
play(s6)
s6
play(s7)
play(s8)
play(s1)
listen(s1)
listen(s1, f = 8000)
rm(list = ls()); gc()
library(knitr)
library(kableExtra)
library(dplyr)
library(tuneR)
library(seewave)
library(audio)
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
s1 <- sin(2*pi*440*seq(0,1,length.out = 8000))
is.vector(s1)
mode(s1)
oscillo(wave = s1, f = 8000)
s2 <- as.matrix(s1)
is.matrix(s2)
dim(s2)
oscillo(wave = s2, f = 8000)
x <- rnorm(8000)
s3 <- cbind(s2, x)
s3 %>% head
is.matrix(s3)
dim(s3)
oscillo(wave = s3, f = 8000)
s4 <- ts(data = s1, start = 0, frequency = 8000)
str(s4)
s4 <- ts(data = rnorm(4000), start = 0, end = 0.5, frequency = 8000)
str(s4)
head(s4, 1); tail(s4, 1)
frequency(s4)
deltat(s4) #1/frequency(s4)
oscillo(wave = s4)
s5 <- ts(data = s3, f = 8000)
class(s5)
oscillo(s5)
s6 <- readWave(filename = "../data/wmv/1kHz_44100Hz_16bit_05sec.wav")
s7 <- readWave(filename = "../data/wmv/1kHz_44100Hz_16bit_05sec.wav", from = 0, to = 2, units = "seconds")
s7
mp3 <- readMP3(filename = "../data/mp3/1kHz_44100Hz_16bit_05sec.mp3")
mp3
s7@left %>% head
s7@right %>% head
s7@stereo
s7@samp.rate
s7@bit
s7@pcm
s7@left %>% range()
s10 <- load.wave(where = "../data/wmv/1kHz_44100Hz_16bit_05sec.wav")
s10 %>% head
s10$rate
s10$bits
data(tico)
export(wave = tico, f = 22050, header = F)
export(wave = tico, f = 22050, header = T)
export(wave = tico, f = 22050, header = T, filename = "tico4Goldwave.txt")
# 自定義 header
export(wave = tico, f = 22050, header = "f=22050; ch=left", filename = "tico4Goldwave.txt")
savewav(tico, f = 22050)
ticofirst <- cutw(wave = tico, f = 22050, to = 0.5, output = "Wave")
savewav(ticofirst, filename = "tico_firstnote.wav")
LF <- sine(440)
RI <- sine(2000)
s12 <- stereo(LF, RI)
s12
s13 <- mono(s12, "left")
s13@right %>% head
s13@left %>% head
s14 <- channel(s12, which = "right")
s14@left %>% head
s14@left %>% head
play(s1)
listen(s1, f = 8000)
listen(s1, f = 8000, from = 0.3. to = 7)
listen(s1, f = 8000, from = 0.3, to = 7)
listen(s13)
listen(s1)
system(paste('"C:\Program Files\DAUM\PotPlayer\PotPlayerMini64.exe"', './tico.wav'))
system(paste('"C:/Program Files/DAUM/PotPlayer/PotPlayerMini64.exe"', './tico.wav'))
s7 <- readWave(filename = "../data/wmv/1kHz_44100Hz_16bit_05sec.wav", from = 0, to = 2, units = "sample")
s7
s7 <- readWave(filename = "../data/wmv/1kHz_44100Hz_16bit_05sec.wav", from = 0, to = 2, units = "seconds")
s7
ticofirst <- cutw(wave = tico, f = 22050, from = 0, plot = T, to = 0.5, output = "Wave")
sine(440)
sine(freq = 440, duration = 5)
t1 <- sine(freq = 440, duration = 5)
listen(t1)
t1 <- sine(freq = 440, duration = 5, xunit = "time")
t1
listen(t1)
demo_wav <- sine(freq = 440, duration = 1, samp.rate = 44100, bit = 32, xunit = "time")
oscillo(demo_wav)
demo_wav <- sine(freq = 5, duration = 1, samp.rate = 44100, bit = 32, xunit = "time")
oscillo(demo_wav)
demo_wav
s7@left %>% head
s7@right %>% head
s7 %>% head(50)
s7@left %>% head(50)
tmp <- s7@left %>% head(100)
tmp01 <- ifelse(tmp>=0, 1, -1)
tmp01
diff(tmp01)
which(diff(tmp01)==-2)
which(diff(tmp01)!=0)
23*44100
22*44100
demo_wav
demo_wav@left %>% range()
tico@left %>% range
s7 <- readWave(filename = "../data/wmv/1kHz_44100Hz_16bit_05sec.wav", from = 0, to = 2, units = "seconds")
s7
22*44100
23*44100
44*1/44100
45*1/44100
rm(list = ls()); gc()
library(knitr)
library(kableExtra)
library(dplyr)
library(tuneR)
library(seewave)
library(audio)
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
s1 <- sin(2*pi*440*seq(0,1,length.out = 8000))
is.vector(s1)
mode(s1)
oscillo(wave = s1, f = 8000)
s2 <- as.matrix(s1)
is.matrix(s2)
dim(s2)
oscillo(wave = s2, f = 8000)
x <- rnorm(8000)
s3 <- cbind(s2, x)
s3 %>% head
is.matrix(s3)
dim(s3)
oscillo(wave = s3, f = 8000)
s4 <- ts(data = s1, start = 0, frequency = 8000)
str(s4)
s4 <- ts(data = rnorm(4000), start = 0, end = 0.5, frequency = 8000)
str(s4)
head(s4, 1); tail(s4, 1)
frequency(s4)
deltat(s4) #1/frequency(s4)
oscillo(wave = s4)
s5 <- ts(data = s3, f = 8000)
class(s5)
oscillo(s5)
s6 <- readWave(filename = "../data/wmv/1kHz_44100Hz_16bit_05sec.wav")
s7 <- readWave(filename = "../data/wmv/1kHz_44100Hz_16bit_05sec.wav", from = 0, to = 2, units = "seconds")
s7
mp3 <- readMP3(filename = "../data/mp3/1kHz_44100Hz_16bit_05sec.mp3")
mp3
s7@left %>% head
s7@right %>% head
s7@stereo
s7@samp.rate
s7@bit
s7@pcm
s7@left %>% range()
s10 <- load.wave(where = "../data/wmv/1kHz_44100Hz_16bit_05sec.wav")
s10 %>% head
s10$rate
s10$bits
data(tico)
export(wave = tico, f = 22050, header = F)
export(wave = tico, f = 22050, header = T)
export(wave = tico, f = 22050, header = T, filename = "tico4Goldwave.txt")
# 自定義 header
export(wave = tico, f = 22050, header = "f=22050; ch=left", filename = "tico4Goldwave.txt")
savewav(tico, f = 22050)
ticofirst <- cutw(wave = tico, f = 22050, from = 0, plot = T, to = 0.5, output = "Wave")
savewav(wave = ticofirst, filename = "tico_firstnote.wav")
LF <- sine(440)
RI <- sine(2000)
s12 <- stereo(LF, RI)
s12
s13 <- mono(s12, "left")
s13@right %>% head
s13@left %>% head
s14 <- channel(s12, which = "right")
s14@left %>% head
s14@left %>% head
demo_wav <- sine(freq = 1500,
samp.rate = 4000,
duration = 1,
xunit = "time")
demo_fft <- fft(demo_wav@left)
xx <- seq(0, 4000-1/4000, length.out = 4000) %>% head(4000/2)
yy1 <- demo_fft %>% Re; yy2 <- demo_fft %>% Im
yy <- ((yy1**2+yy2**2)**0.5) %>% head(4000/2)
# xx %>% length; yy %>% length #檢查長度。
plot(xx, yy, type = "b")
acq.freq <- 100                    # data acquisition (sample) frequency (Hz)
time     <- 6                      # measuring time interval (seconds)
ts       <- seq(0, time-1/acq.freq, 1/acq.freq) # vector of sampling time-points (s)
f.0 <- 1/time
dc.component <- 1
component.freqs <- c(3,7,10)        # frequency of signal components (Hz)
component.delay <- c(0,0,0)         # delay of signal components (radians)
component.strength <- c(1.5,.5,.75) # strength of signal components
f <- function(t,w) {
dc.component +
sum( component.strength * sin(component.freqs*w*t + component.delay))
}
plot.fourier <- function(fourier.series, f.0, ts) {
w <- 2*pi*f.0
trajectory <- sapply(ts, function(t) fourier.series(t,w))
plot(ts, trajectory, type="l", xlab="time", ylab="f(t)"); abline(h=0,lty=3)
}
plot.fourier(f,f.0,ts=ts)
w <- 2*pi*f.0
trajectory <- sapply(ts, function(t) f(t,w))
head(trajectory,n=30)
X.k <- fft(trajectory)                   # find all harmonics with fft()
plot.frequency.spectrum(X.k, xlimits=c(0,20))
plot.frequency.spectrum <- function(X.k, xlimits=c(0,length(X.k))) {
plot.data  <- cbind(0:(length(X.k)-1), Mod(X.k))
# TODO: why this scaling is necessary?
plot.data[2:length(X.k),2] <- 2*plot.data[2:length(X.k),2]
plot(plot.data, t="h", lwd=2, main="",
xlab="Frequency (Hz)", ylab="Strength",
xlim=xlimits, ylim=c(0,max(Mod(plot.data[,2]))))
}
# ---
X.k <- fft(trajectory)                   # find all harmonics with fft()
plot.frequency.spectrum(X.k, xlimits=c(0,20))
